{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos/karangos/src/routed/KarangosList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'Cód.',\n  width: 75\n}, {\n  field: 'marca',\n  headerName: 'marca',\n  width: 75\n}, {\n  field: 'modelo',\n  headerName: 'Modelo',\n  width: 75\n}, {\n  field: 'cor',\n  headerName: 'Cor',\n  width: 75\n}, {\n  field: 'ano_fabricacao',\n  headerName: 'Ano',\n  width: 75\n}, {\n  field: 'importado',\n  headerName: 'Ano',\n  width: 75\n}, {\n  field: 'placa',\n  headerName: 'Placa',\n  width: 75\n}, {\n  field: 'preco',\n  headerName: 'Preço',\n  width: 1\n}];\nexport default function KarangosList() {\n  _s();\n\n  //Variaveis que conterão dados PRECISAM ser inicializados como vetores vazios\n  const [karangos, setKarangos] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      try {\n        // tenta buscar os dados\n        let data = await axios.get('https://api.faustocintra.com.br/karangos');\n        setKarangos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getData();\n  }, []); // Quando a lista de dependencia é um vetor vazio, o useEffect()\n  // é executado apenas uma vez, no carregamento inicial do componente\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listagem de Karangos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: karangos,\n        columns: columns,\n        pageSize: 15,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosList, \"7w9DRKGCulfr6NMPRA24YSSSWUc=\");\n\n_c = KarangosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosList\");","map":{"version":3,"sources":["/workspace/Karangos/karangos/src/routed/KarangosList.js"],"names":["useState","useEffect","axios","DataGrid","columns","field","headerName","width","KarangosList","karangos","setKarangos","getData","data","get","error","console","height"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE,MAA3B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,UAAU,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,UAAU,EAAE,QAA/B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,UAAU,EAAE,KAA5B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAJc,EAKd;AAAEF,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,UAAU,EAAE,KAAvC;AAA8CC,EAAAA,KAAK,EAAE;AAArD,CALc,EAMd;AAAEF,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,UAAU,EAAE,KAAlC;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CANc,EAOd;AAAEF,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,UAAU,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAPc,EAQd;AAAEF,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,UAAU,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CARc,CAAhB;AAWA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACvC;AACI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,OAAf,GAAyB;AACrB,UAAI;AAAC;AACD,YAAIC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,0CAAV,CAAjB;AAEAH,QAAAA,WAAW,CAACE,IAAD,CAAX;AACH,OAJD,CAKA,OAAME,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;;AACDH,IAAAA,OAAO;AACV,GAZQ,EAYP,EAZO,CAAT,CAJmC,CAgB9B;AACL;;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE,GAAV;AAAeT,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEE,QAAhB;AAA0B,QAAA,OAAO,EAAEL,OAAnC;AAA4C,QAAA,QAAQ,EAAE,EAAtD;AAA0D,QAAA,iBAAiB;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAQH;;GA3BuBI,Y;;KAAAA,Y","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n  { field: 'id', headerName: 'Cód.', width: 75},\n  { field: 'marca', headerName: 'marca', width: 75},\n  { field: 'modelo', headerName: 'Modelo', width: 75},\n  { field: 'cor', headerName: 'Cor', width: 75},\n  { field: 'ano_fabricacao', headerName: 'Ano', width: 75},\n  { field: 'importado', headerName: 'Ano', width: 75},\n  { field: 'placa', headerName: 'Placa', width: 75},\n  { field: 'preco', headerName: 'Preço', width: 1},\n];\n\nexport default function KarangosList() {\n//Variaveis que conterão dados PRECISAM ser inicializados como vetores vazios\n    const [karangos, setKarangos] = useState([])\n\n    useEffect(() => {\n        async function getData() {\n            try {// tenta buscar os dados\n                let data = await axios.get('https://api.faustocintra.com.br/karangos')\n            \n                setKarangos(data)\n            }\n            catch(error) {\n                console.error(error)\n            }\n        }\n        getData()\n    },[])// Quando a lista de dependencia é um vetor vazio, o useEffect()\n    // é executado apenas uma vez, no carregamento inicial do componente\n\n    return(\n        <>\n            <h1>Listagem de Karangos</h1>\n            <div style={{ height: 400, width: '100%' }}>\n                <DataGrid rows={karangos} columns={columns} pageSize={15} checkboxSelection />\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}