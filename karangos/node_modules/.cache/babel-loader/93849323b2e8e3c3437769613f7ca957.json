{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}));\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const colors = ['Amarelo', 'Azul', 'Bege', 'Branco', 'Cinza', 'Dourado', 'Laranja', 'Marrom', 'Prata', 'Preto', 'Rosa', 'Roxo', 'Verde', 'Vermelho', 'Vinho'];\n  const years = [];\n\n  for (let i = new Date().getFullYear(); i >= 1900; i--) years.push(i); // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n\n\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }; // Máscara de entrada para a placa\n\n  const placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState(false);\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: ''\n  });\n  const history = useHistory();\n\n  function handleInputChange(event, property) {\n    setCurrentId(event.target.id);\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; // Inverte o valor\n\n      if (newState) setKarango({ ...karango,\n        importado: '1'\n      });else setKarango({ ...karango,\n        importado: '0'\n      });\n      setImportadoChecked(newState);\n    } else if (property === 'placa') {\n      setKarango({ ...karango,\n        placa: event.target.value.toUpperCase()\n      });\n    } else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      setKarango({ ...karango,\n        [property]: event.target.value\n      });\n    }\n\n    setModified(true); // o formulario foi modificado\n  }\n\n  function validate(propety, value) {\n    let valid = true;\n\n    if (property === 'marca') {//trim(): retira espaços em branco do inicio \n    }\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({\n        disabled: true,\n        label: 'Enviando...'\n      });\n      await axios.post('https://api.faustocintra.com.br/karangos', karango); // Mostra a SnackBar\n\n      setSbStatus({\n        open: true,\n        severity: 'success',\n        message: 'Dados salvos com sucesso!'\n      });\n    } catch (error) {\n      // Mostra a SnackBar\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Restaura o estado inicial do botão de envio\n\n\n    setSendBtnStatus({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita que a página seja recarregada\n\n    saveData();\n  }\n\n  function handleSbClose() {\n    setSbStatus({ ...sbStatus,\n      open: false\n    }); // Retorna para a página de listagem em caso de sucesso\n\n    if (sbStatus.severity === 'success') history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: sbStatus.open,\n      autoHideDuration: 6000,\n      onClose: handleSbClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleSbClose,\n        severity: sbStatus.severity,\n        children: sbStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar novo karango\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a marca do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.marca,\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o modelo do ve\\xEDculo\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a cor do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: color,\n          children: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o ano de fabrica\\xE7\\xE3o do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        children: years.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"importado\",\n            checked: importadoChecked,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        id: \"placa\",\n        mask: placaMask,\n        formatChars: formatChars,\n        value: karango.placa,\n        onChange: event => handleInputChange(event, 'placa'),\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          required: true\n          /* not null, precisa ser preenchido */\n          ,\n          placeholder: \"Informe a placa do ve\\xEDculo\",\n          fullWidth: true,\n          error: error.placa,\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o valor do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.preco,\n        helperText: error.preco,\n        type: \"number\",\n        onFocus: event => event.target.select() // Seleciona o conteúdo ao focar\n        ,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 31\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: sendBtnStatus.disabled,\n          children: sendBtnStatus.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), \"currentId: \", JSON.stringify(currentId)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"8RJvd9p3e8Ks1zeoUZAFISuEw/8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","FormControl","FormControlLabel","Checkbox","InputMask","makeStyles","InputAdornment","Toolbar","Button","axios","useHistory","Snackbar","MuiAlert","useStyles","theme","form","display","justifyContent","flexWrap","maxWidth","margin","minWidth","toolbar","width","marginTop","KarangosForm","classes","colors","years","i","Date","getFullYear","push","formatChars","placaMask","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","importado","placa","preco","currentId","setCurrentId","importadoChecked","setImportadoChecked","sendBtnStatus","setSendBtnStatus","disabled","label","sbStatus","setSbStatus","open","severity","message","history","handleInputChange","event","property","target","newState","value","toUpperCase","setModified","validate","propety","valid","saveData","post","error","handleSubmit","preventDefault","handleSbClose","map","color","year","select","startAdornment","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,cAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,QAAQ,EAAE,KAJN;AAKJC,IAAAA,MAAM,EAAE,QALJ;AAMJ,8BAA0B;AACxBC,MAAAA,QAAQ,EAAE,OADc;AAExBF,MAAAA,QAAQ,EAAE,OAFc;AAGxBC,MAAAA,MAAM,EAAE;AAHgB;AANtB,GAD+B;AAarCE,EAAAA,OAAO,EAAE;AACPN,IAAAA,OAAO,EAAE,MADF;AAEPO,IAAAA,KAAK,EAAE,MAFA;AAGPN,IAAAA,cAAc,EAAE,cAHT;AAIPO,IAAAA,SAAS,EAAE;AAJJ;AAb4B,CAAL,CAAN,CAA5B;AAqBA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAMc,MAAM,GAAG,CACb,SADa,EAEb,MAFa,EAGb,MAHa,EAIb,QAJa,EAKb,OALa,EAMb,SANa,EAOb,SAPa,EAQb,QARa,EASb,OATa,EAUb,OAVa,EAWb,MAXa,EAYb,MAZa,EAab,OAba,EAcb,UAda,EAeb,OAfa,CAAf;AAkBA,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAI,IAAIC,CAAC,GAAI,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EAAZ,EAAwCF,CAAC,IAAI,IAA7C,EAAmDA,CAAC,EAApD,EAAwDD,KAAK,CAACI,IAAN,CAAWH,CAAX,EAtBnB,CAwBrC;AACA;AACA;AACA;;;AACA,QAAMI,WAAW,GAAG;AAClB,SAAK,UADa;AAElB,SAAK,OAFa;AAGlB,SAAK;AAHa,GAApB,CA5BqC,CAmCrC;;AACA,QAAMC,SAAS,GAAG,UAAlB,CApCqC,CAsCrC;AACA;;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC;AACrCwC,IAAAA,EAAE,EAAE,IADiC;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,MAAM,EAAE,EAH6B;AAIrCC,IAAAA,GAAG,EAAE,EAJgC;AAKrCC,IAAAA,cAAc,EAAG,IAAIX,IAAJ,EAAD,CAAaC,WAAb,EALqB;AAKU;AAC/CW,IAAAA,SAAS,EAAE,GAN0B;AAOrCC,IAAAA,KAAK,EAAE,EAP8B;AAQrCC,IAAAA,KAAK,EAAE;AAR8B,GAAD,CAAtC;AAUA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,EAA1C;AAEA,QAAM,CAACkD,gBAAD,EAAmBC,mBAAnB,IAA0CnD,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM,CAACoD,aAAD,EAAgBC,gBAAhB,IAAoCrD,QAAQ,CAAC;AACjDsD,IAAAA,QAAQ,EAAE,KADuC;AAEjDC,IAAAA,KAAK,EAAE;AAF0C,GAAD,CAAlD;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,CAAC;AACvC0D,IAAAA,IAAI,EAAE,KADiC;AAEvCC,IAAAA,QAAQ,EAAE,SAF6B;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;AAMA,QAAMC,OAAO,GAAGhD,UAAU,EAA1B;;AAEA,WAASiD,iBAAT,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAC1Cf,IAAAA,YAAY,CAACc,KAAK,CAACE,MAAN,CAAazB,EAAd,CAAZ;AACA,QAAGuB,KAAK,CAACE,MAAN,CAAazB,EAAhB,EAAoBwB,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAazB,EAAxB;;AACpB,QAAGwB,QAAQ,KAAK,WAAhB,EAA6B;AAC3B,YAAME,QAAQ,GAAG,CAAEhB,gBAAnB,CAD2B,CACS;;AACpC,UAAGgB,QAAH,EAAa3B,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaO,QAAAA,SAAS,EAAE;AAAxB,OAAD,CAAV,CAAb,KACKN,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaO,QAAAA,SAAS,EAAE;AAAxB,OAAD,CAAV;AACLM,MAAAA,mBAAmB,CAACe,QAAD,CAAnB;AACD,KALD,MAMK,IAAGF,QAAQ,KAAK,OAAhB,EAAyB;AAC5BzB,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaQ,QAAAA,KAAK,EAAEiB,KAAK,CAACE,MAAN,CAAaE,KAAb,CAAmBC,WAAnB;AAApB,OAAD,CAAV;AACD,KAFI,MAGA;AACH;AACA;AACA;AACA7B,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAa,SAAC0B,QAAD,GAAYD,KAAK,CAACE,MAAN,CAAaE;AAAtC,OAAD,CAAV;AACD;;AACDE,IAAAA,WAAW,CAAC,IAAD,CAAX,CAlB0C,CAkBzB;AAClB;;AAEC,WAASC,QAAT,CAAkBC,OAAlB,EAA2BJ,KAA3B,EAAiC;AAC/B,QAAIK,KAAK,GAAG,IAAZ;;AAEA,QAAGR,QAAQ,KAAK,OAAhB,EAAwB,CACtB;AACD;AACF;;AACH,iBAAeS,QAAf,GAA0B;AACxB,QAAI;AACF;AACApB,MAAAA,gBAAgB,CAAC;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAD,CAAhB;AAEA,YAAM3C,KAAK,CAAC8D,IAAN,CAAW,0CAAX,EAAuDpC,OAAvD,CAAN,CAJE,CAMF;;AACAmB,MAAAA,WAAW,CAAC;AAACC,QAAAA,IAAI,EAAE,IAAP;AAAaC,QAAAA,QAAQ,EAAE,SAAvB;AAAkCC,QAAAA,OAAO,EAAE;AAA3C,OAAD,CAAX;AAED,KATD,CAUA,OAAMe,KAAN,EAAa;AACX;AACAlB,MAAAA,WAAW,CAAC;AAACC,QAAAA,IAAI,EAAE,IAAP;AAAaC,QAAAA,QAAQ,EAAE,OAAvB;AAAgCC,QAAAA,OAAO,EAAE,WAAWe,KAAK,CAACf;AAA1D,OAAD,CAAX;AACD,KAduB,CAexB;;;AACAP,IAAAA,gBAAgB,CAAC;AAACC,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAD,CAAhB;AACD;;AAED,WAASqB,YAAT,CAAsBb,KAAtB,EAA6B;AAE3BA,IAAAA,KAAK,CAACc,cAAN,GAF2B,CAED;;AAE1BJ,IAAAA,QAAQ;AAET;;AAED,WAASK,aAAT,GAAyB;AACvBrB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,MAAAA,IAAI,EAAE;AAApB,KAAD,CAAX,CADuB,CAGvB;;AACA,QAAGF,QAAQ,CAACG,QAAT,KAAsB,SAAzB,EAAoCE,OAAO,CAAC1B,IAAR,CAAa,OAAb;AACrC;;AAED,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEqB,QAAQ,CAACE,IAAzB;AAA+B,MAAA,gBAAgB,EAAE,IAAjD;AAAuD,MAAA,OAAO,EAAEoB,aAAhE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAE,CAArB;AAAwB,QAAA,OAAO,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEA,aAAlD;AAAiE,QAAA,QAAQ,EAAEtB,QAAQ,CAACG,QAApF;AAAA,kBACGH,QAAQ,CAACI;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAM,MAAA,SAAS,EAAE/B,OAAO,CAACX,IAAzB;AAA+B,MAAA,QAAQ,EAAE0D,YAAzC;AAAA,8BAEN,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,KAAK,EAAEtC,OAAO,CAACG,KAJjB;AAKE,QAAA,QAAQ,EAAEqB,iBALZ;AAME,QAAA,QAAQ;AAAE;AANZ;AAOE,QAAA,WAAW,EAAC,+BAPd;AAQE,QAAA,SAAS,MARX;AASE,QAAA,KAAK,EAAEa,KAAK,CAAClC,KATf;AAUE,QAAA,UAAU,EAAEkC,KAAK,CAAClC;AAVpB;AAAA;AAAA;AAAA;AAAA,cAFM,eAcN,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,KAAK,EAAEH,OAAO,CAACI,MAJjB;AAKE,QAAA,QAAQ,EAAEoB,iBALZ;AAME,QAAA,QAAQ;AAAE;AANZ;AAOE,QAAA,WAAW,EAAC,gCAPd;AAQE,QAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,cAdM,eAyBN,QAAC,SAAD;AACU,QAAA,EAAE,EAAC,KADb;AAEU,QAAA,KAAK,EAAC,KAFhB;AAGU,QAAA,OAAO,EAAC,QAHlB;AAIU,QAAA,KAAK,EAAExB,OAAO,CAACK,GAJzB;AAKU,QAAA,QAAQ,EAAEoB,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQ,KAAR,CAL9C;AAMU,QAAA,QAAQ;AAAE;AANpB;AAOU,QAAA,WAAW,EAAC,6BAPtB;AAQU,QAAA,MAAM,MARhB;AASU,QAAA,SAAS,MATnB;AAAA,kBAWYjC,MAAM,CAACiD,GAAP,CAAWC,KAAK,iBAAI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,KAAjB;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAApB;AAXZ;AAAA;AAAA;AAAA;AAAA,cAzBM,eAsCE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,KAAK,EAAC,yBAFR;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,KAAK,EAAE1C,OAAO,CAACM,cAJjB;AAKE,QAAA,QAAQ,EAAEmB,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQ,gBAAR,CALtC;AAME,QAAA,QAAQ;AAAE;AANZ;AAOE,QAAA,WAAW,EAAC,iDAPd;AAQE,QAAA,MAAM,MARR;AASE,QAAA,SAAS,MATX;AAAA,kBAWIhC,KAAK,CAACgD,GAAN,CAAUE,IAAI,iBAAI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,IAAjB;AAAA,oBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAXJ;AAAA;AAAA;AAAA;AAAA,cAtCF,eAmDE,QAAC,WAAD;AAAa,QAAA,SAAS,MAAtB;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,OAAO,eACvB,QAAC,QAAD;AACE,YAAA,EAAE,EAAC,WADL;AAEE,YAAA,OAAO,EAAE/B,gBAFX;AAGE,YAAA,QAAQ,EAAEY;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAQE,UAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnDF,eAgEI,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,OADL;AAGE,QAAA,IAAI,EAAEzB,SAHR;AAIE,QAAA,WAAW,EAAED,WAJf;AAKE,QAAA,KAAK,EAAEE,OAAO,CAACQ,KALjB;AAME,QAAA,QAAQ,EAAGiB,KAAD,IAAWD,iBAAiB,CAACC,KAAD,EAAQ,OAAR,CANxC;AAAA,kBAQG,mBAAM,QAAC,SAAD;AACL,UAAA,KAAK,EAAC,OADD;AAEL,UAAA,OAAO,EAAC,QAFH;AAGL,UAAA,QAAQ;AAAE;AAHL;AAIL,UAAA,WAAW,EAAC,+BAJP;AAKL,UAAA,SAAS,MALJ;AAML,UAAA,KAAK,EAAEY,KAAK,CAAC7B,KANR;AAOL,UAAA,UAAU,EAAE6B,KAAK,CAAC7B;AAPb;AAAA;AAAA;AAAA;AAAA;AART;AAAA;AAAA;AAAA;AAAA,cAhEJ,eAmFI,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,KAAK,EAAER,OAAO,CAACS,KAJjB;AAKE,QAAA,QAAQ,EAAEe,iBALZ;AAME,QAAA,QAAQ;AAAE;AANZ;AAOE,QAAA,WAAW,EAAC,+BAPd;AAQE,QAAA,SAAS,MARX;AASE,QAAA,KAAK,EAAEa,KAAK,CAAC5B,KATf;AAUE,QAAA,UAAU,EAAE4B,KAAK,CAAC5B,KAVpB;AAWE,QAAA,IAAI,EAAC,QAXP;AAYE,QAAA,OAAO,EAAEgB,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaiB,MAAb,EAZpB,CAY4C;AAZ5C;AAaE,QAAA,UAAU,EAAE;AACVC,UAAAA,cAAc,eAAE,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAbd;AAAA;AAAA;AAAA;AAAA,cAnFJ,eAqGI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEtD,OAAO,CAACJ,OAA5B;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,KAAK,EAAC,WAAhD;AAA4D,UAAA,QAAQ,EAAE2B,aAAa,CAACE,QAApF;AAAA,oBACGF,aAAa,CAACG;AADjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cArGJ,eA4GI;AAAA,mBACG6B,IAAI,CAACC,SAAL,CAAe/C,OAAf,CADH,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,iBAGc8C,IAAI,CAACC,SAAL,CAAerC,SAAf,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA,cA5GJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AA6HC;;GA/PqBpB,Y;UACNZ,S,EAiEAH,U;;;KAlEMe,Y","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}))\n\nexport default function KarangosForm() {\n  const classes = useStyles()\n\n  const colors = [\n    'Amarelo',\n    'Azul',\n    'Bege',\n    'Branco',\n    'Cinza',\n    'Dourado',\n    'Laranja',\n    'Marrom',\n    'Prata',\n    'Preto',\n    'Rosa',\n    'Roxo',\n    'Verde',\n    'Vermelho',\n    'Vinho'\n  ]\n\n  const years = []\n  for(let i = (new Date()).getFullYear(); i >= 1900; i--) years.push(i)\n\n  // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }\n\n  \n  // Máscara de entrada para a placa\n  const placaMask = 'AAA-0#00'\n\n  // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: (new Date()).getFullYear(),    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  })\n  const [currentId, setCurrentId] = useState()\n\n  const [importadoChecked, setImportadoChecked] = useState(false)\n\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: '' \n  })\n\n  const history = useHistory()\n\n  function handleInputChange(event, property) {\n    setCurrentId(event.target.id)\n    if(event.target.id) property = event.target.id\n    if(property === 'importado') {\n      const newState = ! importadoChecked // Inverte o valor\n      if(newState) setKarango({...karango, importado: '1'})\n      else setKarango({...karango, importado: '0'})\n      setImportadoChecked(newState) \n    }\n    else if(property === 'placa') {\n      setKarango({...karango, placa: event.target.value.toUpperCase()})\n    }\n    else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      setKarango({...karango, [property]: event.target.value})\n    }\n    setModified(true)// o formulario foi modificado\n  }\n\n    function validate(propety, value){\n      let valid = true\n\n      if(property === 'marca'){\n        //trim(): retira espaços em branco do inicio \n      }\n    }\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({disabled: true, label: 'Enviando...'})\n\n      await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\n\n    }\n    catch(error) {\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\n    }\n    // Restaura o estado inicial do botão de envio\n    setSendBtnStatus({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault()    // Evita que a página seja recarregada\n\n    saveData()\n\n  }\n\n  function handleSbClose() {\n    setSbStatus({...sbStatus, open: false})\n\n    // Retorna para a página de listagem em caso de sucesso\n    if(sbStatus.severity === 'success') history.push('/list')\n  }\n\n  return (\n    <>\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\n          {sbStatus.message}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>Cadastrar novo karango</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n\n<TextField \n  id=\"marca\" \n  label=\"Marca\" \n  variant=\"filled\"\n  value={karango.marca}\n  onChange={handleInputChange}\n  required  /* not null, precisa ser preenchido */\n  placeholder=\"Informe a marca do veículo\"\n  fullWidth\n  error={error.marca}\n  helperText={error.marca}\n/>\n<TextField \n  id=\"modelo\" \n  label=\"Modelo\" \n  variant=\"filled\"\n  value={karango.modelo}\n  onChange={handleInputChange}\n  required  /* not null, precisa ser preenchido */\n  placeholder=\"Informe o modelo do veículo\"\n  fullWidth\n/>\n\n<TextField \n          id=\"cor\" \n          label=\"Cor\" \n          variant=\"filled\"\n          value={karango.cor}\n          onChange={event => handleInputChange(event, 'cor')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a cor do veículo\"\n          select\n          fullWidth\n        >\n          { colors.map(color => <MenuItem value={color}>{color}</MenuItem>)}\n        </TextField>\n        <TextField \n          id=\"ano_fabricacao\" \n          label=\"Ano de fabricação\" \n          variant=\"filled\"\n          value={karango.ano_fabricacao}\n          onChange={event => handleInputChange(event, 'ano_fabricacao')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o ano de fabricação do veículo\"\n          select\n          fullWidth\n        >\n          { years.map(year => <MenuItem value={year}>{year}</MenuItem>)}\n        </TextField>\n        <FormControl fullWidth>\n          <FormControlLabel control={\n            <Checkbox\n              id=\"importado\"\n              checked={importadoChecked}\n              onChange={handleInputChange}\n\n              />\n            }\n            label=\"Importado?\"\n          />\n          </FormControl>\n  \n          <InputMask\n            id=\"placa\" \n\n            mask={placaMask}\n            formatChars={formatChars}\n            value={karango.placa}\n            onChange={(event) => handleInputChange(event, 'placa')}\n          >\n            {() => <TextField \n              label=\"Placa\" \n              variant=\"filled\"\n              required  /* not null, precisa ser preenchido */\n              placeholder=\"Informe a placa do veículo\"\n              fullWidth\n              error={error.placa}\n              helperText={error.placa}\n            />}\n          </InputMask>\n  \n          <TextField \n            id=\"preco\" \n            label=\"Preço\" \n            variant=\"filled\"\n            value={karango.preco}\n            onChange={handleInputChange}\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe o valor do veículo\"\n            fullWidth\n            error={error.preco}\n            helperText={error.preco}\n            type=\"number\"\n            onFocus={event => event.target.select()}  // Seleciona o conteúdo ao focar\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n            }}\n          />\n  \n          <Toolbar className={classes.toolbar}>\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\n              {sendBtnStatus.label}\n            </Button>\n            <Button variant=\"contained\">Voltar</Button>\n          </Toolbar>\n  \n          <div>\n            {JSON.stringify(karango)}\n            <br />\n            currentId: {JSON.stringify(currentId)}\n          </div>\n        </form>\n      </>\n    )\n  }"]},"metadata":{},"sourceType":"module"}