{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { recomposeColor } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function KarangosForm() {\n  _s();\n\n  const colors = ['Amarelo', 'Azul', 'Bege', 'Branco', 'Cinza', 'Dourado', 'Laranja', 'Marrom', 'Prata', 'Preto', 'Rosa', 'Roxo', 'Verde', 'Vermelho', 'Vinho'];\n  const years = [];\n\n  for (let i = new Date().getFullYear(); i > 1900; i--) years.push(i);\n\n  const [karango, setkarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    importado: 0,\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrenId] = setState();\n\n  function handleInputChange(event, property) {\n    setCurrentId(event.target.id);\n    if (event.target.id) property = event.target.id; //Quando o nome de uma propriendade de objeto aparece entre()\n    //significa que o nome da propriendade será determinado pela\n    //variavel ou expressao mantida dentro dos colchetes\n\n    setkarango({ ...karango,\n      [property]: event.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar novo karangos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: Karango.marca,\n        onChange: handleInputChange,\n        required: true\n        /*not null, precisa ser preenchido*/\n        ,\n        placeholder: \"Informe a marca do ve\\xEDculo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \"/>\", /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: Karango.modelo,\n        onChange: handleInputChange,\n        required: true\n        /*not null, precisa ser preenchido*/\n        ,\n        placeholder: \"Informe o modelo do ve\\xEDculo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), \"/>\", /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: Karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        required: true\n        /*not null, precisa ser preenchido*/\n        ,\n        placeholder: \"Informe a cor do ve\\xEDculo\",\n        select: true,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"menuItem\", {\n          value: color,\n          children: recomposeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: Karango.cor,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        required: true\n        /*not null, precisa ser preenchido*/\n        ,\n        placeholder: \"Informe o ano de fabrica\\xE7\\xE3o do ve\\xEDculo\",\n        select: true,\n        children: colors.map(year => /*#__PURE__*/_jsxDEV(\"menuItem\", {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"AhPiAxamM7syy382LABS9nQsGAI=\");\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","recomposeColor","KarangosForm","colors","years","i","Date","getFullYear","push","karango","setkarango","id","marca","modelo","cor","ano_fabricacao","importado","placa","preco","currentId","setCurrenId","setState","handleInputChange","event","property","setCurrentId","target","value","Karango","map","color","year","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { recomposeColor } from '@material-ui/core'\n\nexport default function KarangosForm() {\n    \n    \n    const colors = [\n        'Amarelo',\n        'Azul',\n        'Bege',\n        'Branco',\n        'Cinza',\n        'Dourado',\n        'Laranja',\n        'Marrom',\n        'Prata',\n        'Preto',\n        'Rosa',\n        'Roxo',\n        'Verde',\n        'Vermelho',\n        'Vinho',\n    ]\n\n    const years = []\n    for (let i = (new Date()).getFullYear(); i >1900; i--) years.push(i)\n    \n    const [karango, setkarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),\n        importado: 0,\n        placa: '',\n        preco: 0\n    }) \n    const [currentId, setCurrenId] = setState()   \n\n    function handleInputChange(event, property){\n        setCurrentId(event.target.id)\n        if(event.target.id) property = event.target.id\n        //Quando o nome de uma propriendade de objeto aparece entre()\n        //significa que o nome da propriendade será determinado pela\n        //variavel ou expressao mantida dentro dos colchetes\n        setkarango({...karango, [property]: event.target.value})\n\n    }\n    return (\n        <>\n            <h1>Cadastrar novo karangos</h1>\n            <form>\n\n                <TextField \n                    id=\"marca\"\n                    label=\"Marca\" \n                    variant=\"filled\"\n                    value={Karango.marca}\n                    onChange={handleInputChange}\n                    required /*not null, precisa ser preenchido*/\n                    placeholder=\"Informe a marca do veículo\"                />\n                />\n\n                <TextField \n                    id=\"modelo\"\n                    label=\"Modelo\" \n                    variant=\"filled\"\n                    value={Karango.modelo}\n                    onChange={handleInputChange}\n                    required /*not null, precisa ser preenchido*/\n                    placeholder=\"Informe o modelo do veículo\"                />\n                />\n                <TextField \n                    id=\"cor\"\n                    label=\"Cor\" \n                    variant=\"filled\"\n                    value={Karango.cor}\n                    onChange={event => handleInputChange (event, 'cor')}\n                    required /*not null, precisa ser preenchido*/\n                    placeholder=\"Informe a cor do veículo\"\n                    select\n                >            \n                    { colors.map(color => <menuItem value={color}>{recomposeColor}</menuItem>)}\n                </TextField>\n\n                <TextField \n                    id=\"ano_fabricacao\"\n                    label=\"Ano de fabricação\" \n                    variant=\"filled\"\n                    value={Karango.cor}\n                    onChange={event => handleInputChange (event, 'ano_fabricacao')}\n                    required /*not null, precisa ser preenchido*/\n                    placeholder=\"Informe o ano de fabricação do veículo\"\n                    select             \n                >\n                    { colors.map(year=> <menuItem value={year}>{year}</menuItem>)}\n                </TextField>\n\n\n              <div>\n                {JSON.stringify(karango)}\n                <br />\n              </div>\n            </form>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}