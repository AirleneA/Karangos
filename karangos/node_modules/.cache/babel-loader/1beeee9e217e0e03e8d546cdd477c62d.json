{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}));\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const colors = ['Amarelo', 'Azul', 'Bege', 'Branco', 'Cinza', 'Dourado', 'Laranja', 'Marrom', 'Prata', 'Preto', 'Rosa', 'Roxo', 'Verde', 'Vermelho', 'Vinho'];\n  const years = [];\n\n  for (let i = new Date().getFullYear(); i >= 1900; i--) years.push(i); // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n\n\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }; // Máscara de entrada para a placa\n\n  const placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState(false);\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: ''\n  });\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const history = useHistory();\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    setCurrentId(event.target.id);\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; // Inverte o valor\n\n      if (newState) karangoTemp.importado = '1';else karangoTemp.importado = '0';\n      setImportadoChecked(newState);\n    } else if (property === 'placa') {\n      karangoTemp.placa = event.target.value.toUpperCase();\n    } else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      karangoTemp[property] = event.target.value;\n    }\n\n    setKarango(karangoTemp);\n    setIsModified(true); // O formulário foi modificado\n\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true;\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }; // trim(): retira espaços em branco do início e do final de uma string\n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    }\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    }\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada';\n      isValid = false;\n    } // A placa não pode ser string vazia nem conter sublinhado\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente';\n      isValid = false;\n    } // O preço deve ser numérico e maior que zero\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({\n        disabled: true,\n        label: 'Enviando...'\n      });\n      await axios.post('https://api.faustocintra.com.br/karangos', karango); // Mostra a SnackBar\n\n      setSbStatus({\n        open: true,\n        severity: 'success',\n        message: 'Dados salvos com sucesso!'\n      });\n    } catch (error) {\n      // Mostra a SnackBar\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Restaura o estado inicial do botão de envio\n\n\n    setSendBtnStatus({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita que a página seja recarregada\n\n    saveData();\n  }\n\n  function handleSbClose() {\n    setSbStatus({ ...sbStatus,\n      open: false\n    }); // Retorna para a página de listagem em caso de sucesso\n\n    if (sbStatus.severity === 'success') history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: sbStatus.open,\n      autoHideDuration: 6000,\n      onClose: handleSbClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleSbClose,\n        severity: sbStatus.severity,\n        children: sbStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar novo karango\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a marca do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o modelo do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a cor do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o ano de fabrica\\xE7\\xE3o do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        children: years.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"importado\",\n            checked: importadoChecked,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        id: \"placa\",\n        mask: placaMask,\n        formatChars: formatChars,\n        value: karango.placa,\n        onChange: event => handleInputChange(event, 'placa'),\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          required: true\n          /* not null, precisa ser preenchido */\n          ,\n          placeholder: \"Informe a placa do ve\\xEDculo\",\n          fullWidth: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o valor do ve\\xEDculo\",\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select() // Seleciona o conteúdo ao focar\n        ,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)\n        },\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: sendBtnStatus.disabled,\n          children: sendBtnStatus.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), \"currentId: \", JSON.stringify(currentId), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), \"isModified: \", JSON.stringify(isModified)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"o5VQCYwH8MrmeHJDfWlZbamfPFk=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","FormControl","FormControlLabel","Checkbox","InputMask","makeStyles","InputAdornment","Toolbar","Button","axios","useHistory","Snackbar","MuiAlert","React","useStyles","theme","form","display","justifyContent","flexWrap","maxWidth","margin","minWidth","toolbar","width","marginTop","KarangosForm","classes","colors","years","i","Date","getFullYear","push","formatChars","placaMask","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","importado","placa","preco","currentId","setCurrentId","importadoChecked","setImportadoChecked","sendBtnStatus","setSendBtnStatus","disabled","label","sbStatus","setSbStatus","open","severity","message","error","setError","isModified","setIsModified","history","handleInputChange","event","property","karangoTemp","target","newState","value","toUpperCase","validate","data","isValid","errorTemp","trim","includes","isNaN","Number","saveData","post","handleSubmit","preventDefault","handleSbClose","map","color","year","select","startAdornment","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}))\n\nexport default function KarangosForm() {\n  const classes = useStyles()\n\n  const colors = [\n    'Amarelo',\n    'Azul',\n    'Bege',\n    'Branco',\n    'Cinza',\n    'Dourado',\n    'Laranja',\n    'Marrom',\n    'Prata',\n    'Preto',\n    'Rosa',\n    'Roxo',\n    'Verde',\n    'Vermelho',\n    'Vinho'\n  ]\n\n  const years = []\n  for(let i = (new Date()).getFullYear(); i >= 1900; i--) years.push(i)\n\n  // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }\n\n  // Máscara de entrada para a placa\n  const placaMask = 'AAA-0#00'\n\n  // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: (new Date()).getFullYear(),    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  })\n  const [currentId, setCurrentId] = useState()\n\n  const [importadoChecked, setImportadoChecked] = useState(false)\n\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: '' \n  })\n\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  })\n\n  const [isModified, setIsModified] = useState(false)\n\n  const history = useHistory()\n\n  function handleInputChange(event, property) {\n\n    const karangoTemp = {...karango}\n\n    setCurrentId(event.target.id)\n    if(event.target.id) property = event.target.id\n\n    if(property === 'importado') {\n      const newState = ! importadoChecked // Inverte o valor\n      if(newState) karangoTemp.importado = '1'\n      else karangoTemp.importado = '0'\n      setImportadoChecked(newState) \n    }\n    else if(property === 'placa') {\n      karangoTemp.placa = event.target.value.toUpperCase()\n    }\n    else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      karangoTemp[property] = event.target.value\n    }\n    setKarango(karangoTemp)\n    setIsModified(true)   // O formulário foi modificado\n    validate(karangoTemp)  // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true\n\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }\n\n    // trim(): retira espaços em branco do início e do final de uma string\n    if(data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida'\n      isValid = false\n    }     \n\n    if(data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido'\n      isValid = false\n    }\n\n    if(data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada'\n      isValid = false\n    }\n\n    // A placa não pode ser string vazia nem conter sublinhado\n    if(data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente'\n      isValid = false\n    }\n\n    // O preço deve ser numérico e maior que zero\n    if(isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero'\n      isValid = false\n    }\n\n    setError(errorTemp)\n    return isValid\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({disabled: true, label: 'Enviando...'})\n      \n      await axios.post('https://api.faustocintra.com.br/karangos', karango)\n      \n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\n      \n    }\n    catch(error) {\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\n    }\n    // Restaura o estado inicial do botão de envio\n    setSendBtnStatus({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault()    // Evita que a página seja recarregada\n\n    saveData()\n\n  }\n\n  function handleSbClose() {\n    setSbStatus({...sbStatus, open: false})\n\n    // Retorna para a página de listagem em caso de sucesso\n    if(sbStatus.severity === 'success') history.push('/list')\n  }\n\n  return (\n    <>\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\n          {sbStatus.message}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>Cadastrar novo karango</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        \n        <TextField \n          id=\"marca\" \n          label=\"Marca\" \n          variant=\"filled\"\n          value={karango.marca}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a marca do veículo\"\n          fullWidth\n          error={error.marca !== ''}\n          helperText={error.marca}\n        />\n\n        <TextField \n          id=\"modelo\" \n          label=\"Modelo\" \n          variant=\"filled\"\n          value={karango.modelo}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o modelo do veículo\"\n          fullWidth\n          error={error.modelo !== ''}\n          helperText={error.modelo}\n        />\n\n        <TextField \n          id=\"cor\" \n          label=\"Cor\" \n          variant=\"filled\"\n          value={karango.cor}\n          onChange={event => handleInputChange(event, 'cor')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a cor do veículo\"\n          select\n          fullWidth\n          error={error.cor !== ''}\n          helperText={error.cor}\n        >\n          { colors.map(color => <MenuItem value={color} key={color}>{color}</MenuItem>)}\n        </TextField>\n\n        <TextField \n          id=\"ano_fabricacao\" \n          label=\"Ano de fabricação\" \n          variant=\"filled\"\n          value={karango.ano_fabricacao}\n          onChange={event => handleInputChange(event, 'ano_fabricacao')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o ano de fabricação do veículo\"\n          select\n          fullWidth\n        >\n          { years.map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n        </TextField>\n\n        <FormControl fullWidth>\n          <FormControlLabel control={\n            <Checkbox\n              id=\"importado\"\n              checked={importadoChecked}\n              onChange={handleInputChange}\n            />\n          }\n          label=\"Importado?\"\n        />\n        </FormControl>\n\n        <InputMask\n          id=\"placa\" \n          mask={placaMask}\n          formatChars={formatChars}\n          value={karango.placa}\n          onChange={(event) => handleInputChange(event, 'placa')}\n        >\n          {() => <TextField \n            label=\"Placa\" \n            variant=\"filled\"\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe a placa do veículo\"\n            fullWidth\n            error={error.placa !== ''}\n            helperText={error.placa}\n          />}\n        </InputMask>\n\n        <TextField \n          id=\"preco\" \n          label=\"Preço\" \n          variant=\"filled\"\n          value={karango.preco}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o valor do veículo\"\n          fullWidth\n          type=\"number\"\n          onFocus={event => event.target.select()}  // Seleciona o conteúdo ao focar\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n          }}\n          error={error.preco !== ''}\n          helperText={error.preco}\n        />\n\n        <Toolbar className={classes.toolbar}>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\n            {sendBtnStatus.label}\n          </Button>\n          <Button variant=\"contained\">Voltar</Button>\n        </Toolbar>\n\n        <div>\n          {JSON.stringify(karango)}\n          <br />\n          currentId: {JSON.stringify(currentId)}\n          <br />\n          isModified: {JSON.stringify(isModified)}\n        </div>\n      </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}