{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos/karangos/src/routed/KarangosList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function KarangosList() {\n  _s();\n\n  const classes = useStyles(); // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n\n  const [karangos, setKarangos] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      try {\n        // tenta buscar os dados\n        let response = await axios.get('https://api.faustocintra.com.br/karangos');\n        setKarangos(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getData();\n  }, []); // Quando a lista de dependências é um vetor vazio, o useEffect()\n  // é executado apenas uma vez, no carregamento inicial do componente\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listagem de Karangos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"C\\xF3d.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Marca\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Modelo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Cor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Importado?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Placa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Pre\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: karangos.map(karango => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.marca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.modelo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.cor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.ano_fabricacao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: karango.importado === 1,\n                readonly: \"readonly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: karango.placa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: Number(karango.preco).toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, karango.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosList, \"s2x0Y9qx5B5k/RKJ6Lb62+Qr6tQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = KarangosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosList\");","map":{"version":3,"sources":["/workspace/Karangos/karangos/src/routed/KarangosList.js"],"names":["useState","useEffect","axios","React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Checkbox","useStyles","table","minWidth","KarangosList","classes","karangos","setKarangos","getData","response","get","data","error","console","map","karango","id","marca","modelo","cor","ano_fabricacao","importado","placa","Number","preco","toLocaleString","style","currency"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function KarangosList() {\n    const classes = useStyles()\n  \n    // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n    const [karangos, setKarangos] = useState([])\n  \n    useEffect(() => {\n      async function getData() {\n        try { // tenta buscar os dados\n          let response = await axios.get('https://api.faustocintra.com.br/karangos')\n          setKarangos(response.data)\n        }\n        catch(error) {\n          console.error(error)\n        }\n      }\n      getData()\n    }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n           // é executado apenas uma vez, no carregamento inicial do componente\n  \n    return (\n        <>\n        <h1>Listagem de Karangos</h1>\n        <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n                          <TableCell>Cód.</TableCell>\n              <TableCell>Marca</TableCell>\n              <TableCell>Modelo</TableCell>\n              <TableCell>Cor</TableCell>\n              <TableCell>Ano</TableCell>\n              <TableCell align=\"center\">Importado?</TableCell>\n              <TableCell>Placa</TableCell>\n              <TableCell align=\"right\">Preço</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {karangos.map((karango) => (\n              <TableRow key={karango.id}>\n                <TableCell>{karango.id}</TableCell>\n                <TableCell>{karango.marca}</TableCell>\n                <TableCell>{karango.modelo}</TableCell>\n                <TableCell>{karango.cor}</TableCell>\n                <TableCell>{karango.ano_fabricacao}</TableCell>\n                <TableCell align=\"center\">\n                <Checkbox checked={karango.importado === 1} readonly=\"readonly\" />\n                </TableCell>\n                <TableCell>{karango.placa}</TableCell>\n                <TableCell align=\"right\">\n                  { Number(karango.preco).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n                </TableCell>\n              </TableRow>\n            ))}\n            </TableBody>\n          </Table>\n        </TableContainer>      \n      </>\n    )\n  } \n"]},"metadata":{},"sourceType":"module"}